import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.datasets import load_boston
boston = load_boston()
data=pd.DataFrame(boston.data)
data.shape
data.columns = (boston.feature_names)
data.head()
data['PRICE'] = boston.target
data.isnull().sum()
x=data.drop(['PRICE'],axis=1)
y=data['PRICE']
from sklearn.model_selection import train_test_split
xtrain, xtest, ytrain, ytest=train_test_split(x,y,test_size=0.2,random_state=0)
import sklearn
from sklearn.linear_model import LinearRegression
lm=LinearRegression()
model=lm.fit(xtrain, ytrain)
lm.intercept_
lm.coef_
ytrain_pred=lm.predict(xtrain)
ytest_pred=lm.predict(xtest)
df=pd.DataFrame(ytrain_pred, ytrain)
df=pd.DataFrame(ytest_pred, ytest)
from sklearn.metrics import mean_squared_error, r2_score
mse = mean_squared_error(ytest, ytest_pred)
print(mse)
mse=mean_squared_error(ytrain_pred, ytrain)
print(mse)
mse=mean_squared_error(ytest, ytest_pred)
plt.scatter(ytrain ,ytrain_pred,c='blue',marker='o',label='Training data')
plt.scatter(ytest,ytest_pred ,c='lightgreen',marker='s',label='Test data')
plt.xlabel('True values')
plt.ylabel('Predicted')
plt.title("True value vs Predicted value")
plt.legend(loc= 'upper left')
#plt.hlines(y=0,xmin=0,xmax=50)
plt.plot()
plt.show()
